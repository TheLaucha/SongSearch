{"version":3,"sources":["components/SearchForm.js","components/SongArtist.js","components/SongLyrics.js","components/Message.js","components/SongDetails.js","components/Loader.js","helpers/helpHttp.js","components/Examples.js","App.js","reportWebVitals.js","index.js"],"names":["initialForm","artist","song","SearchForm","handleSearch","useState","form","setForm","handleChange","e","target","name","value","handleReset","onSubmit","preventDefault","alert","className","type","placeholder","onChange","SongArtist","strArtist","src","strArtistThumb","alt","intBornYear","intDiedYear","strCountry","strGenre","strStyle","href","strWebsite","strTwitter","rel","strBiographyES","strBiographyEN","SongLyrics","lyrics","title","Message","msg","styles","padding","marginBottom","textAlign","color","fontWeight","backgroundColor","bgColor","style","SongDetails","bio","lyric","search","err","error","artists","Loader","helpHttp","customFetch","endpoint","options","defaultHeader","accept","controller","AbortController","signal","method","headers","body","JSON","stringify","setTimeout","abort","fetch","then","res","ok","json","Promise","reject","status","statusText","catch","get","url","post","put","del","Examples","useEffect","searchSong","handleClick","onClick","App","setSearch","setBio","setLyric","loading","setLoading","a","artistUrl","songUrl","all","artistRes","songRes","console","log","fetchData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26d4fd8a.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport \"./SearchForm.css\"\r\n\r\nconst initialForm = {\r\n  artist: \"\",\r\n  song: \"\",\r\n}\r\n\r\nconst SearchForm = ({ handleSearch }) => {\r\n  const [form, setForm] = useState(initialForm)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!form.artist || !form.song) {\r\n      alert(\"Faltan datos\")\r\n      return\r\n    }\r\n\r\n    handleSearch(form)\r\n\r\n    handleReset()\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setForm(initialForm)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className='Form'>\r\n        <input\r\n          type='text'\r\n          name='artist'\r\n          placeholder='Nombre del artista'\r\n          onChange={handleChange}\r\n          value={form.artist}\r\n        ></input>\r\n        <input\r\n          type='text'\r\n          name='song'\r\n          placeholder='Nombre de la cancion'\r\n          onChange={handleChange}\r\n          value={form.song}\r\n        ></input>\r\n        <button type='submit'>Buscar</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","import React from \"react\"\r\nimport \"./SongArtist.css\"\r\n\r\nconst SongArtist = ({ artist }) => {\r\n  return (\r\n    <div className='artistContainer'>\r\n      <h3>{artist.strArtist}</h3>\r\n      <img src={artist.strArtistThumb} alt='artist thumb'></img>\r\n      <p>\r\n        <i className='fas fa-calendar-alt'></i>\r\n        {artist.intBornYear} - {artist.intDiedYear || \"Presente\"}\r\n      </p>\r\n      <p>\r\n        <i className='fas fa-map-marker-alt'></i>\r\n        {artist.strCountry}\r\n      </p>\r\n      <p>\r\n        <i className='fas fa-guitar'></i>\r\n        {artist.strGenre} - {artist.strStyle}\r\n      </p>\r\n      <a href={`http://${artist.strWebsite || artist.strTwitter}`} target='_blank' rel='noreferrer'>\r\n        <i className='fas fa-link'></i>\r\n        Sitio web Oficial\r\n      </a>\r\n      <p>\r\n        <i className='fas fa-pen'></i>\r\n        {artist.strBiographyES || artist.strBiographyEN}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SongArtist\r\n","import React from \"react\"\r\nimport \"./SongLyrics.css\"\r\n\r\nconst SongLyrics = ({ lyrics, title }) => {\r\n  return (\r\n    <div className='lyricsContainer'>\r\n      <h3>{title}</h3>\r\n      <p>{lyrics}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SongLyrics\r\n","import React from \"react\";\r\n\r\nconst Message = ({ msg, bgColor }) => {\r\n  let styles = {\r\n    padding: \"1rem\",\r\n    marginBottom: \"1rem\",\r\n    textAlign: \"center\",\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    backgroundColor: bgColor,\r\n  };\r\n\r\n  return (\r\n    <div style={styles}>\r\n      <p>{msg}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\"\r\nimport SongArtist from \"./SongArtist\"\r\nimport SongLyrics from \"./SongLyrics\"\r\nimport Message from \"./Message\"\r\nimport \"./SongDetails.css\"\r\n\r\nconst SongDetails = ({ bio, lyric, search }) => {\r\n  if (!lyric || !bio) return null\r\n\r\n  return (\r\n    <section className='detailsContainer'>\r\n      {lyric.err || lyric.error || lyric.name === \"AbortError\" ? (\r\n        <Message msg={`Error: No existe la cancion ${search.song}`} bgColor='#dc3545'></Message>\r\n      ) : (\r\n        <SongLyrics lyrics={lyric.lyrics} title={search.song}></SongLyrics>\r\n      )}\r\n\r\n      {bio.artists ? (\r\n        <SongArtist artist={bio.artists[0]}></SongArtist>\r\n      ) : (\r\n        <Message\r\n          msg={`Error: no existe el interprete \"${search.artist}\"`}\r\n          bgColor='#dc3545'\r\n        ></Message>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SongDetails\r\n","import React from \"react\"\r\nimport \"./Loader.css\"\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loaderContainer'>\r\n      <div className='lds-hourglass'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","export const helpHttp = () => {\r\n  const customFetch = (endpoint, options) => {\r\n    const defaultHeader = {\r\n      accept: \"application/json\",\r\n    };\r\n\r\n    const controller = new AbortController();\r\n    options.signal = controller.signal;\r\n\r\n    options.method = options.method || \"GET\";\r\n    options.headers = options.headers\r\n      ? { ...defaultHeader, ...options.headers }\r\n      : defaultHeader;\r\n\r\n    options.body = JSON.stringify(options.body) || false;\r\n    if (!options.body) delete options.body;\r\n\r\n    //console.log(options);\r\n    setTimeout(() => controller.abort(), 3000);\r\n\r\n    return fetch(endpoint, options)\r\n      .then((res) =>\r\n        res.ok\r\n          ? res.json()\r\n          : Promise.reject({\r\n              err: true,\r\n              status: res.status || \"00\",\r\n              statusText: res.statusText || \"Ocurrió un error\",\r\n            })\r\n      )\r\n      .catch((err) => err);\r\n  };\r\n\r\n  const get = (url, options = {}) => customFetch(url, options);\r\n\r\n  const post = (url, options = {}) => {\r\n    options.method = \"POST\";\r\n    return customFetch(url, options);\r\n  };\r\n\r\n  const put = (url, options = {}) => {\r\n    options.method = \"PUT\";\r\n    return customFetch(url, options);\r\n  };\r\n\r\n  const del = (url, options = {}) => {\r\n    options.method = \"DELETE\";\r\n    return customFetch(url, options);\r\n  };\r\n\r\n  return {\r\n    get,\r\n    post,\r\n    put,\r\n    del,\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\"\r\nimport \"./Examples.css\"\r\nimport SearchForm from \"./SearchForm\"\r\n\r\nconst initialForm = {\r\n  artist: \"\",\r\n  song: \"\",\r\n}\r\n\r\nconst Examples = ({ handleSearch }) => {\r\n  const [form, setForm] = useState(initialForm)\r\n\r\n  useEffect(() => {\r\n    if (!form.artist || !form.song) return null\r\n\r\n    function searchSong(form) {\r\n      handleSearch(form)\r\n    }\r\n\r\n    searchSong(form)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [form])\r\n\r\n  const handleClick = (artist, song) => {\r\n    setForm({ artist: artist, song: song })\r\n  }\r\n\r\n  return (\r\n    <div className='examplesContainer'>\r\n      <h3>Algunos ejemplos</h3>\r\n      <div className='examplesBtn'>\r\n        <button onClick={() => handleClick(\"Billie Eilish\", \"idontwannabeyouanymore\")}>\r\n          Billie Eilish - idontwannabeyouanymore\r\n        </button>\r\n        <button onClick={() => handleClick(\"The Weeknd\", \"Blinding Lights\")}>\r\n          The Weeknd - Blinding Lights\r\n        </button>\r\n        <button onClick={() => handleClick(\"Bad Bunny\", \"DÁKITI\")}>Bad Bunny - DÁKITI</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Examples\r\n","import { useState, useEffect } from \"react\"\nimport \"./App.css\"\nimport SearchForm from \"./components/SearchForm\"\nimport SongDetails from \"./components/SongDetails\"\nimport Loader from \"./components/Loader\"\nimport { helpHttp } from \"./helpers/helpHttp.js\"\nimport Examples from \"./components/Examples\"\n\nfunction App() {\n  const [search, setSearch] = useState(null)\n  const [bio, setBio] = useState(null)\n  const [lyric, setLyric] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (search === null) return\n\n    const fetchData = async () => {\n      const { artist, song } = search\n\n      let artistUrl = `https://theaudiodb.com/api/v1/json/2/search.php?s=${artist}`\n      let songUrl = `https://api.lyrics.ovh/v1/${artist}/${song}`\n\n      setLoading(true)\n\n      const [artistRes, songRes] = await Promise.all([\n        helpHttp().get(artistUrl),\n        helpHttp().get(songUrl),\n      ])\n\n      console.log(artistRes)\n\n      setBio(artistRes)\n      setLyric(songRes)\n      setLoading(false)\n    }\n\n    fetchData()\n  }, [search])\n\n  const handleSearch = (form) => {\n    setSearch(form)\n  }\n\n  return (\n    <div className='App'>\n      <h2>SongSearch</h2>\n      <SearchForm handleSearch={handleSearch}></SearchForm>\n      <Examples handleSearch={handleSearch}></Examples>\n      {loading && <Loader></Loader>}\n      {search && !loading && <SongDetails bio={bio} lyric={lyric} search={search}></SongDetails>}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}